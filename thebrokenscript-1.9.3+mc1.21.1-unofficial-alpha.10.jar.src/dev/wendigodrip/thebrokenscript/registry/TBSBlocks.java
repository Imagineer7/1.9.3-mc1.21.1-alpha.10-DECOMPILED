/*    */ package dev.wendigodrip.thebrokenscript.registry;
/*    */ import java.util.function.Supplier;
/*    */ import kotlin.jvm.internal.Intrinsics;
/*    */ import net.minecraft.world.level.block.Block;
/*    */ import net.neoforged.neoforge.registries.DeferredHolder;
/*    */ import org.jetbrains.annotations.NotNull;
/*    */ 
/*    */ @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000 \n\002\030\002\n\002\020\000\n\002\b\003\n\002\030\002\n\002\030\002\n\002\b\003\n\002\030\002\n\002\b*\bÆ\002\030\0002\0020\001B\t\b\002¢\006\004\b\002\020\003R\027\020\004\032\b\022\004\022\0020\0060\005¢\006\b\n\000\032\004\b\007\020\bR\035\020\t\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b\013\020\fR\034\020\r\032\016\022\004\022\0020\006\022\004\022\0020\0060\n8\006X\004¢\006\002\n\000R\035\020\016\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b\017\020\fR\035\020\020\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b\021\020\fR\035\020\022\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b\023\020\fR\035\020\024\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b\025\020\fR\034\020\026\032\016\022\004\022\0020\006\022\004\022\0020\0060\n8\006X\004¢\006\002\n\000R\034\020\027\032\016\022\004\022\0020\006\022\004\022\0020\0060\n8\006X\004¢\006\002\n\000R\035\020\030\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b\031\020\fR\035\020\032\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b\033\020\fR\034\020\034\032\016\022\004\022\0020\006\022\004\022\0020\0060\n8\006X\004¢\006\002\n\000R\035\020\035\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b\036\020\fR\035\020\037\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b \020\fR\035\020!\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b\"\020\fR\035\020#\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b$\020\fR\035\020%\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b&\020\fR\034\020'\032\016\022\004\022\0020\006\022\004\022\0020\0060\n8\006X\004¢\006\002\n\000R\035\020(\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b)\020\fR\035\020*\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b+\020\fR\035\020,\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b-\020\fR\035\020.\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b/\020\fR\034\0200\032\016\022\004\022\0020\006\022\004\022\0020\0060\n8\006X\004¢\006\002\n\000R\034\0201\032\016\022\004\022\0020\006\022\004\022\0020\0060\n8\006X\004¢\006\002\n\000R\035\0202\032\016\022\004\022\0020\006\022\004\022\0020\0060\n¢\006\b\n\000\032\004\b3\020\f¨\0064"}, d2 = {"Ldev/wendigodrip/thebrokenscript/registry/TBSBlocks;", "", "<init>", "()V", "REGISTRY", "Lnet/neoforged/neoforge/registries/DeferredRegister;", "Lnet/minecraft/world/level/block/Block;", "getREGISTRY", "()Lnet/neoforged/neoforge/registries/DeferredRegister;", "ALL_DEAD", "Lnet/neoforged/neoforge/registries/DeferredHolder;", "getALL_DEAD", "()Lnet/neoforged/neoforge/registries/DeferredHolder;", "OLDBLOCK", "HELLO", "getHELLO", "EMPTY", "getEMPTY", "IT", "getIT", "EXIT", "getEXIT", "DISRUPTION", "PROTECTED_VOID", "VOID_DOOR", "getVOID_DOOR", "CONSOLE", "getCONSOLE", "FIELD_GENERATOR", "OBSIDIAN", "getOBSIDIAN", "WHITE", "getWHITE", "R_3", "getR_3", "INT", "getINT", "SHADOW_BUG", "getSHADOW_BUG", "HELLISH_GENERATOR", "CLANBUILD_ANOMALY_GENERATOR", "getCLANBUILD_ANOMALY_GENERATOR", "PROTECTED_VOID_STAIRS", "getPROTECTED_VOID_STAIRS", "PROTECTED_VOID_SLAB", "getPROTECTED_VOID_SLAB", "PROTECTED_VOID_LIGHT", "getPROTECTED_VOID_LIGHT", "PHYSICAL_STACKTRACE", "VOIDEXP_GENERATOR", "BLOCK_IS_MISSING_ID", "getBLOCK_IS_MISSING_ID", "thebrokenscript"})
/*    */ public final class TBSBlocks {
/*    */   @NotNull
/* 11 */   public static final TBSBlocks INSTANCE = new TBSBlocks(); @NotNull private static final DeferredRegister<Block> REGISTRY = DeferredRegister.create((Registry)BuiltInRegistries.BLOCK, "thebrokenscript"); @NotNull public final DeferredRegister<Block> getREGISTRY() { return REGISTRY; } static { Intrinsics.checkNotNullExpressionValue(DeferredRegister.create((Registry)BuiltInRegistries.BLOCK, "thebrokenscript"), "create(...)"); }
/*    */    @NotNull
/* 13 */   private static final DeferredHolder<Block, Block> ALL_DEAD = REGISTRY.register("all_dead", dev.wendigodrip.thebrokenscript.block.AllDeadBlock::new); @NotNull public final DeferredHolder<Block, Block> getALL_DEAD() { return ALL_DEAD; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("all_dead", dev.wendigodrip.thebrokenscript.block.AllDeadBlock::new), "register(...)"); }
/*    */    @JvmField
/*    */   @NotNull
/* 16 */   public static final DeferredHolder<Block, Block> OLDBLOCK = REGISTRY.register("oldblock", dev.wendigodrip.thebrokenscript.block.OldblockBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("oldblock", dev.wendigodrip.thebrokenscript.block.OldblockBlock::new), "register(...)"); } @NotNull
/* 17 */   private static final DeferredHolder<Block, Block> HELLO = REGISTRY.register("hello", dev.wendigodrip.thebrokenscript.block.HelloBlock::new); @NotNull public final DeferredHolder<Block, Block> getHELLO() { return HELLO; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("hello", dev.wendigodrip.thebrokenscript.block.HelloBlock::new), "register(...)"); } @NotNull
/* 18 */   private static final DeferredHolder<Block, Block> EMPTY = REGISTRY.register("empty", dev.wendigodrip.thebrokenscript.block.EmptyBlock::new); @NotNull public final DeferredHolder<Block, Block> getEMPTY() { return EMPTY; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("empty", dev.wendigodrip.thebrokenscript.block.EmptyBlock::new), "register(...)"); } @NotNull
/* 19 */   private static final DeferredHolder<Block, Block> IT = REGISTRY.register("it", dev.wendigodrip.thebrokenscript.block.ItBlock::new); @NotNull public final DeferredHolder<Block, Block> getIT() { return IT; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("it", dev.wendigodrip.thebrokenscript.block.ItBlock::new), "register(...)"); } @NotNull
/* 20 */   private static final DeferredHolder<Block, Block> EXIT = REGISTRY.register("exit", dev.wendigodrip.thebrokenscript.block.ExitBlock::new); @NotNull public final DeferredHolder<Block, Block> getEXIT() { return EXIT; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("exit", dev.wendigodrip.thebrokenscript.block.ExitBlock::new), "register(...)"); }
/*    */    @JvmField
/*    */   @NotNull
/* 23 */   public static final DeferredHolder<Block, Block> DISRUPTION = REGISTRY.register("disruption", dev.wendigodrip.thebrokenscript.block.DisruptionBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("disruption", dev.wendigodrip.thebrokenscript.block.DisruptionBlock::new), "register(...)"); }
/*    */    @JvmField
/*    */   @NotNull
/* 26 */   public static final DeferredHolder<Block, Block> PROTECTED_VOID = REGISTRY.register("protected_void", dev.wendigodrip.thebrokenscript.block.ProtectedVoidBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("protected_void", dev.wendigodrip.thebrokenscript.block.ProtectedVoidBlock::new), "register(...)"); } @NotNull
/* 27 */   private static final DeferredHolder<Block, Block> VOID_DOOR = REGISTRY.register("void_door", dev.wendigodrip.thebrokenscript.block.VoidDoorBlock::new); @NotNull public final DeferredHolder<Block, Block> getVOID_DOOR() { return VOID_DOOR; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("void_door", dev.wendigodrip.thebrokenscript.block.VoidDoorBlock::new), "register(...)"); } @NotNull
/* 28 */   private static final DeferredHolder<Block, Block> CONSOLE = REGISTRY.register("console", dev.wendigodrip.thebrokenscript.block.ConsoleBlock::new); @NotNull public final DeferredHolder<Block, Block> getCONSOLE() { return CONSOLE; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("console", dev.wendigodrip.thebrokenscript.block.ConsoleBlock::new), "register(...)"); }
/*    */    @JvmField
/*    */   @NotNull
/* 31 */   public static final DeferredHolder<Block, Block> FIELD_GENERATOR = REGISTRY.register("field_generator", dev.wendigodrip.thebrokenscript.block.FieldGeneratorBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("field_generator", dev.wendigodrip.thebrokenscript.block.FieldGeneratorBlock::new), "register(...)"); } @NotNull
/* 32 */   private static final DeferredHolder<Block, Block> OBSIDIAN = REGISTRY.register("obsidian", dev.wendigodrip.thebrokenscript.block.ObsidianBlock::new); @NotNull public final DeferredHolder<Block, Block> getOBSIDIAN() { return OBSIDIAN; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("obsidian", dev.wendigodrip.thebrokenscript.block.ObsidianBlock::new), "register(...)"); } @NotNull
/* 33 */   private static final DeferredHolder<Block, Block> WHITE = REGISTRY.register("white", dev.wendigodrip.thebrokenscript.block.WhiteBlock::new); @NotNull public final DeferredHolder<Block, Block> getWHITE() { return WHITE; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("white", dev.wendigodrip.thebrokenscript.block.WhiteBlock::new), "register(...)"); } @NotNull
/* 34 */   private static final DeferredHolder<Block, Block> R_3 = REGISTRY.register("r_3", dev.wendigodrip.thebrokenscript.block.R3Block::new); @NotNull public final DeferredHolder<Block, Block> getR_3() { return R_3; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("r_3", dev.wendigodrip.thebrokenscript.block.R3Block::new), "register(...)"); } @NotNull
/* 35 */   private static final DeferredHolder<Block, Block> INT = REGISTRY.register("int", dev.wendigodrip.thebrokenscript.block.IntBlock::new); @NotNull public final DeferredHolder<Block, Block> getINT() { return INT; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("int", dev.wendigodrip.thebrokenscript.block.IntBlock::new), "register(...)"); } @NotNull
/* 36 */   private static final DeferredHolder<Block, Block> SHADOW_BUG = REGISTRY.register("shadow_bug", dev.wendigodrip.thebrokenscript.block.ShadowBugBlock::new); @NotNull public final DeferredHolder<Block, Block> getSHADOW_BUG() { return SHADOW_BUG; } static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("shadow_bug", dev.wendigodrip.thebrokenscript.block.ShadowBugBlock::new), "register(...)"); }
/*    */   
/*    */   @JvmField
/*    */   @NotNull
/* 40 */   public static final DeferredHolder<Block, Block> HELLISH_GENERATOR = REGISTRY.register("hellish_generator", dev.wendigodrip.thebrokenscript.block.HellishGeneratorBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("hellish_generator", dev.wendigodrip.thebrokenscript.block.HellishGeneratorBlock::new), "register(...)"); }
/*    */   @NotNull
/* 42 */   public final DeferredHolder<Block, Block> getCLANBUILD_ANOMALY_GENERATOR() { return CLANBUILD_ANOMALY_GENERATOR; } @NotNull
/* 43 */   private static final DeferredHolder<Block, Block> CLANBUILD_ANOMALY_GENERATOR = REGISTRY.register("clanbuild_anomaly_generator", dev.wendigodrip.thebrokenscript.block.ClanbuildAnomalyGeneratorBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("clanbuild_anomaly_generator", dev.wendigodrip.thebrokenscript.block.ClanbuildAnomalyGeneratorBlock::new), "register(...)"); }
/*    */   @NotNull
/* 45 */   public final DeferredHolder<Block, Block> getPROTECTED_VOID_STAIRS() { return PROTECTED_VOID_STAIRS; } @NotNull
/* 46 */   private static final DeferredHolder<Block, Block> PROTECTED_VOID_STAIRS = REGISTRY.register("protected_void_stairs", dev.wendigodrip.thebrokenscript.block.ProtectedVoidStairsBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("protected_void_stairs", dev.wendigodrip.thebrokenscript.block.ProtectedVoidStairsBlock::new), "register(...)"); }
/*    */   @NotNull
/* 48 */   public final DeferredHolder<Block, Block> getPROTECTED_VOID_SLAB() { return PROTECTED_VOID_SLAB; } @NotNull
/* 49 */   private static final DeferredHolder<Block, Block> PROTECTED_VOID_SLAB = REGISTRY.register("protected_void_slab", dev.wendigodrip.thebrokenscript.block.ProtectedVoidSlabBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("protected_void_slab", dev.wendigodrip.thebrokenscript.block.ProtectedVoidSlabBlock::new), "register(...)"); }
/*    */   @NotNull
/* 51 */   public final DeferredHolder<Block, Block> getPROTECTED_VOID_LIGHT() { return PROTECTED_VOID_LIGHT; } @NotNull
/* 52 */   private static final DeferredHolder<Block, Block> PROTECTED_VOID_LIGHT = REGISTRY.register("protected_void_light", dev.wendigodrip.thebrokenscript.block.ProtectedVoidLightBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("protected_void_light", dev.wendigodrip.thebrokenscript.block.ProtectedVoidLightBlock::new), "register(...)"); }
/*    */   
/*    */   @JvmField
/*    */   @NotNull
/* 56 */   public static final DeferredHolder<Block, Block> PHYSICAL_STACKTRACE = REGISTRY.register("physical_stacktrace", dev.wendigodrip.thebrokenscript.block.PhysicalStacktraceBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("physical_stacktrace", dev.wendigodrip.thebrokenscript.block.PhysicalStacktraceBlock::new), "register(...)"); }
/*    */   
/*    */   @JvmField
/*    */   @NotNull
/* 60 */   public static final DeferredHolder<Block, Block> VOIDEXP_GENERATOR = REGISTRY.register("voidexp_generator", dev.wendigodrip.thebrokenscript.block.VoidexpGeneratorBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("voidexp_generator", dev.wendigodrip.thebrokenscript.block.VoidexpGeneratorBlock::new), "register(...)"); }
/*    */   @NotNull
/* 62 */   public final DeferredHolder<Block, Block> getBLOCK_IS_MISSING_ID() { return BLOCK_IS_MISSING_ID; } @NotNull
/* 63 */   private static final DeferredHolder<Block, Block> BLOCK_IS_MISSING_ID = REGISTRY.register("block_is_missing_id", dev.wendigodrip.thebrokenscript.block.BlockIsMissingIdBlock::new); static { Intrinsics.checkNotNullExpressionValue(REGISTRY.register("block_is_missing_id", dev.wendigodrip.thebrokenscript.block.BlockIsMissingIdBlock::new), "register(...)"); }
/*    */ 
/*    */ }


/* Location:              C:\Users\Caleb\Downloads\thebrokenscript-1.9.3+mc1.21.1-unofficial-alpha.10.jar!\dev\wendigodrip\thebrokenscript\registry\TBSBlocks.class
 * Java compiler version: 21 (65.0)
 * JD-Core Version:       1.1.3
 */